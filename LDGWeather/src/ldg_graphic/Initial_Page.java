/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ldg_graphic;

import com.google.gson.Gson;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import ldg_weather.LDG_City;
import ldg_weather.LDG_City_json;
import ldg_weather.LDG_all;
import org.apache.http.HttpResponse;
import org.apache.http.client.fluent.Request;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.util.EntityUtils;
import org.dom4j.io.OutputFormat;

/**
 *
 * @author 70657788
 */
public class Initial_Page extends javax.swing.JFrame {

    Gson g;
    //FileReader f;
    BufferedReader file;
    boolean mapEnable = false;

    /**
     * Creates new form Initial_Page
     */
    public Initial_Page() {
        initComponents();
    }

    public Initial_Page(String ldg_Weather) {
        super(ldg_Weather);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Name_project = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        Position = new javax.swing.JButton();
        Name = new javax.swing.JLabel();
        gif = new javax.swing.JLabel();
        HPA = new javax.swing.JLabel();
        Temperature = new javax.swing.JLabel();
        SKY = new javax.swing.JLabel();
        WIND = new javax.swing.JLabel();
        show = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        City = new javax.swing.JTextField();
        Sfondo = new javax.swing.JLabel();
        map = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(260, 350));
        jPanel1.setLayout(null);

        Name_project.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Name_project.setForeground(new java.awt.Color(255, 255, 255));
        Name_project.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Name_project.setText("LDG Weather Map");
        jPanel1.add(Name_project);
        Name_project.setBounds(70, 10, 120, 14);

        Search.setBackground(new java.awt.Color(255, 255, 255));
        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/search-button.png"))); // NOI18N
        Search.setBorder(null);
        Search.setBorderPainted(false);
        Search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Search.setOpaque(false);
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jPanel1.add(Search);
        Search.setBounds(200, 40, 40, 40);

        Position.setBackground(new java.awt.Color(255, 255, 255));
        Position.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/posizione.png"))); // NOI18N
        Position.setBorder(null);
        Position.setBorderPainted(false);
        Position.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Position.setOpaque(false);
        Position.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PositionActionPerformed(evt);
            }
        });
        jPanel1.add(Position);
        Position.setBounds(10, 40, 40, 40);

        Name.setBackground(new java.awt.Color(255, 255, 255));
        Name.setForeground(new java.awt.Color(255, 255, 255));
        Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(Name);
        Name.setBounds(30, 90, 190, 30);
        jPanel1.add(gif);
        gif.setBounds(20, 160, 64, 64);

        HPA.setForeground(new java.awt.Color(255, 255, 255));
        HPA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HPA.setText("Pressure:");
        jPanel1.add(HPA);
        HPA.setBounds(40, 310, 180, 30);

        Temperature.setForeground(new java.awt.Color(255, 255, 255));
        Temperature.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(Temperature);
        Temperature.setBounds(80, 180, 100, 30);

        SKY.setForeground(new java.awt.Color(255, 255, 255));
        SKY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SKY.setText("Sky:");
        jPanel1.add(SKY);
        SKY.setBounds(40, 230, 180, 30);

        WIND.setForeground(new java.awt.Color(255, 255, 255));
        WIND.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WIND.setText("Wind: ");
        jPanel1.add(WIND);
        WIND.setBounds(40, 270, 180, 30);

        show.setBackground(new java.awt.Color(255, 255, 255));
        show.setIcon(new javax.swing.ImageIcon("C:\\Users\\salva\\Desktop\\scuola\\weather_map-master\\LDGWeather\\src\\ldg_graphic\\gif\\show map.png")); // NOI18N
        show.setBorder(null);
        show.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        show.setOpaque(false);
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });
        jPanel1.add(show);
        show.setBounds(80, 130, 100, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("By LDG Group");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(180, 336, 80, 14);

        City.setBorder(null);
        City.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityActionPerformed(evt);
            }
        });
        jPanel1.add(City);
        City.setBounds(60, 40, 130, 40);

        Sfondo.setBackground(new java.awt.Color(255, 255, 255));
        Sfondo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Sfondo.setForeground(new java.awt.Color(255, 255, 255));
        Sfondo.setIcon(new javax.swing.ImageIcon("C:\\Users\\salva\\Desktop\\scuola\\weather_map-master\\LDGWeather\\src\\ldg_graphic\\gif\\fulmini.jpg")); // NOI18N
        Sfondo.setText("By LDG Group");
        jPanel1.add(Sfondo);
        Sfondo.setBounds(0, 0, 260, 350);

        map.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(map);
        map.setBounds(260, 0, 350, 350);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-1, 0, 610, 350);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PositionActionPerformed

    }//GEN-LAST:event_PositionActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed

        String name = City.getText();
        Name.setText(name);
        name = name.replaceAll(" ", "+");
        LDG_all all = null;
        //LDG_City_json json_city = null;
        try {
            all = createJsonAll();
            //json_city = createJsonCity();
            createMap(name);
        } catch (IOException ex) {
            Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            setValue(all);
        } catch (IOException ex) {
            Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        if (!mapEnable) {
            this.setSize(615, 379);
            mapEnable = true;
        } else {
            this.setSize(265, 379);
            mapEnable = false;
        }
    }//GEN-LAST:event_showActionPerformed

    private void CityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        System.out.println(evt.getKeyCode());
        if (evt.getKeyCode() == 10) {
            String name = City.getText();
            Name.setText(name);
            name = name.replaceAll(" ", "+");
            LDG_all all = null;
            //LDG_City_json json_city = null;
            try {
                all = createJsonAll();
                //json_city = createJsonCity();
                createMap(name);
            } catch (IOException ex) {
                Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                setValue(all);
            } catch (IOException ex) {
                Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formKeyPressed

    private LDG_all createJsonAll() throws IOException, URISyntaxException {
        g = new Gson();
        URIBuilder builder = new URIBuilder().setScheme("http")
                .setHost("api.openweathermap.org")
                .setPath("data/2.5/weather")
                .addParameter("q", City.getText())
                .addParameter("mode", "json")
                .addParameter("appid", "d400fec814c6d1b2403716b155b31e84");

        System.out.println(builder.build());

        HttpResponse response = Request.Get(builder.build())
                .execute().returnResponse();

        int returnCode = response.getStatusLine().getStatusCode();
        String body = EntityUtils.toString(response.getEntity());

        System.out.println(body);
        LDG_all all = g.fromJson(body, LDG_all.class);
        return all;
    }

    private LDG_City_json createJsonCity() throws FileNotFoundException, IOException {
        FileReader f = new FileReader("city.txt");
        BufferedReader file_city = new BufferedReader(f);

        String j = file_city.readLine();

        LDG_City_json city = g.fromJson(j, LDG_City_json.class);

        return city;
    }

    private void createMap(String name) {
        try {
            String ur_map = "https://maps.googleapis.com/maps/api/staticmap?center=" + name + "&markers=icon:http://tinyurl.com/2ftvtt6%7C" + name + "&zoom=11&size=350x350&key=AIzaSyAh79Rh756UTB0PKLkmBLb2sO0yKoHBKSo";
            String destinationFile = "image.jpg";
            URL url = new URL(ur_map);
            InputStream is = url.openStream();
            OutputStream os = new FileOutputStream(destinationFile);
            byte[] b = new byte[2048];
            int length;
            while ((length = is.read(b)) != -1) {
                os.write(b, 0, length);
            }
            is.close();
            os.close();
        } catch (MalformedURLException ex) {
            Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Initial_Page.class.getName()).log(Level.SEVERE, null, ex);
        }
        ImageIcon imageIcon = new ImageIcon((new ImageIcon("image.jpg")).getImage().getScaledInstance(350, 350, java.awt.Image.SCALE_SMOOTH));
        map.setIcon(imageIcon);
    }

    private void setValue(LDG_all all) throws IOException {
        City.setText("");
        SKY.setText("Sky: " + all.getWeather().get(0).getDescription());
        WIND.setText("Wind: " + all.getWind().getSpeed() + "Km/h " + getDirection(all.getWind().getDeg()));
        HPA.setText("Pressure: " + all.getMain().getPressure() + " HPA");
        Temperature.setText("" + getCelsius(all.getMain().getTemp()) + "°C");
        setGif(all);
    }

    private String getCelsius(Double kelvin) {
        double cel = kelvin - 273.15;
        String celsius = String.valueOf(cel);
        if (celsius.length() > 4) {
            return celsius.substring(0, 4);
        }
        return celsius;
    }

    private String getDirection(Double deg) {
        if (deg >= 0 && deg <= 22.5) {
            return "N";
        } else if (deg > 22.5 && deg <= 67.5) {
            return "NE";
        } else if (deg > 67.5 && deg <= 112.5) {
            return "E";
        } else if (deg > 112.5 && deg <= 157.5) {
            return "SE";
        } else if (deg > 157.5 && deg <= 202.5) {
            return "S";
        } else if (deg > 202.5 && deg <= 247.5) {
            return "SW";
        } else if (deg > 247.5 && deg <= 292.5) {
            return "W";
        } else if (deg > 292.5 && deg <= 337.5) {
            return "NW";
        } else if (deg > 337.5 && deg <= 360) {
            return "N";
        } else {
            return "";
        }
    }

    public void setGif(LDG_all all) {
        String code = all.getWeather().get(0).getIcon();
        switch (code) {
            case "01d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Sunny.gif")));
                break;
            case "02d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Partly cloudy.gif")));
                break;
            case "03d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Cloudy.gif")));
                break;
            case "04d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Cloudy.gif")));
                break;
            case "09d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Raining.gif")));
                break;
            case "10d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Partly cloudy with rain.gif")));
                break;
            case "11d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Lightning.gif")));
                break;
            case "13d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Snow.gif")));
                break;
            case "50d":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/50d.png")));
                break;
            case "01n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Sunny.gif")));
                break;
            case "02n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Partly cloudy.gif")));
                break;
            case "03n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Cloudy.gif")));
                break;
            case "04n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Cloudy.gif")));
                break;
            case "09n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Raining.gif")));
                break;
            case "10n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Partly cloudy with rain.gif")));
                break;
            case "11n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Lightning.gif")));
                break;
            case "13n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/Snow.gif")));
                break;
            case "50n":
                gif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ldg_graphic/gif/50d.png")));
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Initial_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Initial_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Initial_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Initial_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Initial_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField City;
    private javax.swing.JLabel HPA;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Name_project;
    private javax.swing.JButton Position;
    private javax.swing.JLabel SKY;
    private javax.swing.JButton Search;
    private javax.swing.JLabel Sfondo;
    private javax.swing.JLabel Temperature;
    private javax.swing.JLabel WIND;
    private javax.swing.JLabel gif;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel map;
    private javax.swing.JButton show;
    // End of variables declaration//GEN-END:variables
}
